fullnameOverride: example-app

image:
  repository: nginx
  pullPolicy: Always
  # IfNotPresent
  tag: alpine

volumes: []
  # - name: config
  #   configMap:
  #     name: config
  #     items: 
  #       - key: env
  #         path: .env
  #       - key: sha1
  #         path: sha1.txt
  # - name: log-file
  #   hostPath:
  #     type: DirectoryOrCreate
  #     path: /data/logs/app-name
  # - name: nginx-conf
  #   configMap:
  #     name: nginx-default

volumeMounts: []
  # - name: config
  #   mountPath: /app/.env
  #   subPath: .env
  # - name: config
  #   mountPath: /var/share/nginx/html/sha1.txt
  #   subPath: sha1.txt
  # - name: log-file
  #   mountPath: /app/storage/logs
  # - name: nginx-conf
  #   mountPath: /etc/nginx/conf.d
  #   readOnly: true

envFrom: []
  # - configMapRef:
  #     name: test
  # - secretRef:
  #     name: test

service:
  type: ClusterIP
  port: 80
  additionalPorts: []
    # - port: 81
    #   targetPort: 81
    #   protocol: TCP
    #   name: backend

ingressRoute:
  enabled: true
  entryPoints:
    - web
    - websecure
  routes:
    - kind: Rule
      match: Host(`example-app`)
      middlewares:
        - name: log-request
      services:
        - name: service-name
          port: 80
    # - kind: Rule
    #   match: Host(`example-app`) && PathPrefix(`/api`)
    #   middlewares:
    #     - name: stripprefix-api
    #   services:
    #     - name: service-name
    #       port: 80
  # tlsName: 

cron:
  enabled: false
  serviceAccountName: job
  schedule: "* * * * *"
  nodeSelector: {}
  command:
    - sh
    - -c
    - "kubectl exec deploy/example-app -- php artisan schedule:run"

jobs:
  enabled: false
  serviceAccountName: job
  commands:
    - "while true; do kubectl exec deploy/example-app -- pwd ; sleep 5; done"

lifecycle: {}
  # preStop:
  #   exec:
  #     command: ["sh", "-c", "sleep 5"]
  # postStart:
  #   exec:
  #     command: ["sh", "-c", "chown -R www-data:www-data /app/storage"]

startupProbe:
  exec:
    command: ["ls", "/tmp"]
  initialDelaySeconds: 5
  periodSeconds: 5

imagePullSecrets: []
nameOverride: ""

replicaCount: 1
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

nodeSelector: {}

resources: {}

tolerations: []

affinity: {}
