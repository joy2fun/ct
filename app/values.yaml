fullnameOverride: example-app

image:
  repository: nginx
  pullPolicy: Always
  # IfNotPresent
  tag: alpine

volumes: []
  # - name: config
  #   configMap:
  #     name: config
  #     items: 
  #       - key: env
  #         path: .env
  #       - key: sha1
  #         path: sha1.txt
  # - name: log-file
  #   hostPath:
  #     type: DirectoryOrCreate
  #     path: /data/logs/app-name

volumeMounts: []
  # - name: config
  #   mountPath: /app/.env
  #   subPath: .env
  # - name: config
  #   mountPath: /var/www/html/public/sha1.txt
  #   subPath: sha1.txt
  # - name: log-file
  #   mountPath: /app/storage/logs

command: []

ingressRoute:
  enabled: true
  entryPoints:
    - web
    - websecure
  routes:
    - kind: Rule
      match: Host(`example-app`)
      middlewares:
        - name: log-request
      services:
        - name: example-app
          port: 80
  tls: {}
    # secretName: ""

cron:
  enabled: false
  serviceAccountName: job
  image: bitnami/kubectl:latest
  nodeSelector: {}
  jobs: 
    - schedule: "* * * * *"
      name: "job"
      command: kubectl exec deploy/example-app -- su www-data -s /bin/sh -c 'php artisan schedule:run'

tasks:
  enabled: false
  serviceAccountName: job
  image: bitnami/kubectl:latest
  nodeSelector: {}
  commands:
    - name: whoami
      sleep: 10
      command: kubectl exec deploy/example-app -- su www-data -s /bin/sh -c 'whoami'

service:
  type: ClusterIP
  port: 80
  additionalPorts: []
    # - port: 81
    #   targetPort: 81
    #   protocol: TCP
    #   name: backend

env:
  # - name: APP_HOST
  #   value: example.app
  # - name: TZ
  #   value: Asia/Shanghai

envFrom: []
  # - configMapRef:
  #     name: test
  # - secretRef:
  #     name: test

lifecycle:
  preStop:
    exec:
      command: ["sh", "-c", "sleep 5"]
  # postStart:
  #   exec:
  #     command: ["sh", "-c", "chown -R www-data:www-data /app/storage"]

startupProbe:
  exec:
    command: ["ls", "/tmp"]
  initialDelaySeconds: 5
  periodSeconds: 5

imagePullSecrets: []
nameOverride: ""

replicaCount: 1
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

nodeSelector: {}

resources: {}

tolerations: []

affinity: {}
